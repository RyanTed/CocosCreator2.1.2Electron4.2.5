(function () {
    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
    var __module = nodeEnv ? module : { exports: {} };
    var __filename = 'engine-dev/cocos2d/renderer/gfx/enums.js';
    var __require = nodeEnv ? function (request) {
        return require(request);
    } : function (request) {
        return __quick_compile__.require(request, __filename);
    };
    function __define(exports, require, module) {
        if (!nodeEnv) {
            __quick_compile__.registerModule(__filename, module);
        }
                'use strict';
        Object.defineProperty(exports, '__esModule', { value: true });
        exports.attrTypeBytes = attrTypeBytes;
        exports.glFilter = glFilter;
        exports.glTextureFmt = glTextureFmt;
        var GL_NEAREST = 9728;
        var GL_LINEAR = 9729;
        var GL_NEAREST_MIPMAP_NEAREST = 9984;
        var GL_LINEAR_MIPMAP_NEAREST = 9985;
        var GL_NEAREST_MIPMAP_LINEAR = 9986;
        var GL_LINEAR_MIPMAP_LINEAR = 9987;
        var GL_UNSIGNED_BYTE = 5121;
        var GL_UNSIGNED_SHORT = 5123;
        var GL_UNSIGNED_INT = 5125;
        var GL_FLOAT = 5126;
        var GL_UNSIGNED_SHORT_5_6_5 = 33635;
        var GL_UNSIGNED_SHORT_4_4_4_4 = 32819;
        var GL_UNSIGNED_SHORT_5_5_5_1 = 32820;
        var GL_HALF_FLOAT_OES = 36193;
        var GL_DEPTH_COMPONENT = 6402;
        var GL_ALPHA = 6406;
        var GL_RGB = 6407;
        var GL_RGBA = 6408;
        var GL_LUMINANCE = 6409;
        var GL_LUMINANCE_ALPHA = 6410;
        var GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 33776;
        var GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 33777;
        var GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 33778;
        var GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 33779;
        var GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 35840;
        var GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 35841;
        var GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 35842;
        var GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 35843;
        var GL_COMPRESSED_RGB_ETC1_WEBGL = 36196;
        var GL_COMPRESSED_RGB8_ETC2 = 37492;
        var GL_COMPRESSED_RGBA8_ETC2_EAC = 37496;
        var _filterGL = [
            [
                GL_NEAREST,
                GL_NEAREST_MIPMAP_NEAREST,
                GL_NEAREST_MIPMAP_LINEAR
            ],
            [
                GL_LINEAR,
                GL_LINEAR_MIPMAP_NEAREST,
                GL_LINEAR_MIPMAP_LINEAR
            ]
        ];
        var _textureFmtGL = [
            {
                format: GL_RGB,
                internalFormat: GL_COMPRESSED_RGB_S3TC_DXT1_EXT,
                pixelType: null
            },
            {
                format: GL_RGBA,
                internalFormat: GL_COMPRESSED_RGBA_S3TC_DXT1_EXT,
                pixelType: null
            },
            {
                format: GL_RGBA,
                internalFormat: GL_COMPRESSED_RGBA_S3TC_DXT3_EXT,
                pixelType: null
            },
            {
                format: GL_RGBA,
                internalFormat: GL_COMPRESSED_RGBA_S3TC_DXT5_EXT,
                pixelType: null
            },
            {
                format: GL_RGB,
                internalFormat: GL_COMPRESSED_RGB_ETC1_WEBGL,
                pixelType: null
            },
            {
                format: GL_RGB,
                internalFormat: GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG,
                pixelType: null
            },
            {
                format: GL_RGBA,
                internalFormat: GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG,
                pixelType: null
            },
            {
                format: GL_RGB,
                internalFormat: GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG,
                pixelType: null
            },
            {
                format: GL_RGBA,
                internalFormat: GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,
                pixelType: null
            },
            {
                format: GL_ALPHA,
                internalFormat: GL_ALPHA,
                pixelType: GL_UNSIGNED_BYTE
            },
            {
                format: GL_LUMINANCE,
                internalFormat: GL_LUMINANCE,
                pixelType: GL_UNSIGNED_BYTE
            },
            {
                format: GL_LUMINANCE_ALPHA,
                internalFormat: GL_LUMINANCE_ALPHA,
                pixelType: GL_UNSIGNED_BYTE
            },
            {
                format: GL_RGB,
                internalFormat: GL_RGB,
                pixelType: GL_UNSIGNED_SHORT_5_6_5
            },
            {
                format: GL_RGBA,
                internalFormat: GL_RGBA,
                pixelType: GL_UNSIGNED_SHORT_5_5_5_1
            },
            {
                format: GL_RGBA,
                internalFormat: GL_RGBA,
                pixelType: GL_UNSIGNED_SHORT_4_4_4_4
            },
            {
                format: GL_RGB,
                internalFormat: GL_RGB,
                pixelType: GL_UNSIGNED_BYTE
            },
            {
                format: GL_RGBA,
                internalFormat: GL_RGBA,
                pixelType: GL_UNSIGNED_BYTE
            },
            {
                format: GL_RGB,
                internalFormat: GL_RGB,
                pixelType: GL_HALF_FLOAT_OES
            },
            {
                format: GL_RGBA,
                internalFormat: GL_RGBA,
                pixelType: GL_HALF_FLOAT_OES
            },
            {
                format: GL_RGB,
                internalFormat: GL_RGB,
                pixelType: GL_FLOAT
            },
            {
                format: GL_RGBA,
                internalFormat: GL_RGBA,
                pixelType: GL_FLOAT
            },
            {
                format: null,
                internalFormat: null,
                pixelType: null
            },
            {
                format: null,
                internalFormat: null,
                pixelType: null
            },
            {
                format: null,
                internalFormat: null,
                pixelType: null
            },
            {
                format: null,
                internalFormat: null,
                pixelType: null
            },
            {
                format: GL_DEPTH_COMPONENT,
                internalFormat: GL_DEPTH_COMPONENT,
                pixelType: GL_UNSIGNED_SHORT
            },
            {
                format: GL_DEPTH_COMPONENT,
                internalFormat: GL_DEPTH_COMPONENT,
                pixelType: GL_UNSIGNED_INT
            },
            {
                format: GL_DEPTH_COMPONENT,
                internalFormat: GL_DEPTH_COMPONENT,
                pixelType: GL_UNSIGNED_INT
            },
            {
                format: GL_RGB,
                internalFormat: GL_COMPRESSED_RGB8_ETC2,
                pixelType: null
            },
            {
                format: GL_RGBA,
                internalFormat: GL_COMPRESSED_RGBA8_ETC2_EAC,
                pixelType: null
            }
        ];
        var enums = exports.enums = {
            USAGE_STATIC: 35044,
            USAGE_DYNAMIC: 35048,
            USAGE_STREAM: 35040,
            INDEX_FMT_UINT8: 5121,
            INDEX_FMT_UINT16: 5123,
            INDEX_FMT_UINT32: 5125,
            ATTR_POSITION: 'a_position',
            ATTR_NORMAL: 'a_normal',
            ATTR_TANGENT: 'a_tangent',
            ATTR_BITANGENT: 'a_bitangent',
            ATTR_WEIGHTS: 'a_weights',
            ATTR_JOINTS: 'a_joints',
            ATTR_COLOR: 'a_color',
            ATTR_COLOR0: 'a_color0',
            ATTR_COLOR1: 'a_color1',
            ATTR_UV: 'a_uv',
            ATTR_UV0: 'a_uv0',
            ATTR_UV1: 'a_uv1',
            ATTR_UV2: 'a_uv2',
            ATTR_UV3: 'a_uv3',
            ATTR_UV4: 'a_uv4',
            ATTR_UV5: 'a_uv5',
            ATTR_UV6: 'a_uv6',
            ATTR_UV7: 'a_uv7',
            ATTR_TYPE_INT8: 5120,
            ATTR_TYPE_UINT8: 5121,
            ATTR_TYPE_INT16: 5122,
            ATTR_TYPE_UINT16: 5123,
            ATTR_TYPE_INT32: 5124,
            ATTR_TYPE_UINT32: 5125,
            ATTR_TYPE_FLOAT32: 5126,
            FILTER_NEAREST: 0,
            FILTER_LINEAR: 1,
            WRAP_REPEAT: 10497,
            WRAP_CLAMP: 33071,
            WRAP_MIRROR: 33648,
            TEXTURE_FMT_RGB_DXT1: 0,
            TEXTURE_FMT_RGBA_DXT1: 1,
            TEXTURE_FMT_RGBA_DXT3: 2,
            TEXTURE_FMT_RGBA_DXT5: 3,
            TEXTURE_FMT_RGB_ETC1: 4,
            TEXTURE_FMT_RGB_PVRTC_2BPPV1: 5,
            TEXTURE_FMT_RGBA_PVRTC_2BPPV1: 6,
            TEXTURE_FMT_RGB_PVRTC_4BPPV1: 7,
            TEXTURE_FMT_RGBA_PVRTC_4BPPV1: 8,
            TEXTURE_FMT_A8: 9,
            TEXTURE_FMT_L8: 10,
            TEXTURE_FMT_L8_A8: 11,
            TEXTURE_FMT_R5_G6_B5: 12,
            TEXTURE_FMT_R5_G5_B5_A1: 13,
            TEXTURE_FMT_R4_G4_B4_A4: 14,
            TEXTURE_FMT_RGB8: 15,
            TEXTURE_FMT_RGBA8: 16,
            TEXTURE_FMT_RGB16F: 17,
            TEXTURE_FMT_RGBA16F: 18,
            TEXTURE_FMT_RGB32F: 19,
            TEXTURE_FMT_RGBA32F: 20,
            TEXTURE_FMT_R32F: 21,
            TEXTURE_FMT_111110F: 22,
            TEXTURE_FMT_SRGB: 23,
            TEXTURE_FMT_SRGBA: 24,
            TEXTURE_FMT_D16: 25,
            TEXTURE_FMT_D32: 26,
            TEXTURE_FMT_D24S8: 27,
            TEXTURE_FMT_RGB_ETC2: 28,
            TEXTURE_FMT_RGBA_ETC2: 29,
            DS_FUNC_NEVER: 512,
            DS_FUNC_LESS: 513,
            DS_FUNC_EQUAL: 514,
            DS_FUNC_LEQUAL: 515,
            DS_FUNC_GREATER: 516,
            DS_FUNC_NOTEQUAL: 517,
            DS_FUNC_GEQUAL: 518,
            DS_FUNC_ALWAYS: 519,
            RB_FMT_RGBA4: 32854,
            RB_FMT_RGB5_A1: 32855,
            RB_FMT_RGB565: 36194,
            RB_FMT_D16: 33189,
            RB_FMT_S8: 36168,
            RB_FMT_D24S8: 34041,
            BLEND_FUNC_ADD: 32774,
            BLEND_FUNC_SUBTRACT: 32778,
            BLEND_FUNC_REVERSE_SUBTRACT: 32779,
            BLEND_ZERO: 0,
            BLEND_ONE: 1,
            BLEND_SRC_COLOR: 768,
            BLEND_ONE_MINUS_SRC_COLOR: 769,
            BLEND_DST_COLOR: 774,
            BLEND_ONE_MINUS_DST_COLOR: 775,
            BLEND_SRC_ALPHA: 770,
            BLEND_ONE_MINUS_SRC_ALPHA: 771,
            BLEND_DST_ALPHA: 772,
            BLEND_ONE_MINUS_DST_ALPHA: 773,
            BLEND_CONSTANT_COLOR: 32769,
            BLEND_ONE_MINUS_CONSTANT_COLOR: 32770,
            BLEND_CONSTANT_ALPHA: 32771,
            BLEND_ONE_MINUS_CONSTANT_ALPHA: 32772,
            BLEND_SRC_ALPHA_SATURATE: 776,
            STENCIL_DISABLE: 0,
            STENCIL_ENABLE: 1,
            STENCIL_INHERIT: 2,
            STENCIL_OP_KEEP: 7680,
            STENCIL_OP_ZERO: 0,
            STENCIL_OP_REPLACE: 7681,
            STENCIL_OP_INCR: 7682,
            STENCIL_OP_INCR_WRAP: 34055,
            STENCIL_OP_DECR: 7683,
            STENCIL_OP_DECR_WRAP: 34056,
            STENCIL_OP_INVERT: 5386,
            CULL_NONE: 0,
            CULL_FRONT: 1028,
            CULL_BACK: 1029,
            CULL_FRONT_AND_BACK: 1032,
            PT_POINTS: 0,
            PT_LINES: 1,
            PT_LINE_LOOP: 2,
            PT_LINE_STRIP: 3,
            PT_TRIANGLES: 4,
            PT_TRIANGLE_STRIP: 5,
            PT_TRIANGLE_FAN: 6
        };
        function attrTypeBytes(attrType) {
            if (attrType === enums.ATTR_TYPE_INT8) {
                return 1;
            } else if (attrType === enums.ATTR_TYPE_UINT8) {
                return 1;
            } else if (attrType === enums.ATTR_TYPE_INT16) {
                return 2;
            } else if (attrType === enums.ATTR_TYPE_UINT16) {
                return 2;
            } else if (attrType === enums.ATTR_TYPE_INT32) {
                return 4;
            } else if (attrType === enums.ATTR_TYPE_UINT32) {
                return 4;
            } else if (attrType === enums.ATTR_TYPE_FLOAT32) {
                return 4;
            }
            console.warn('Unknown ATTR_TYPE: ' + attrType);
            return 0;
        }
        function glFilter(gl, filter) {
            var mipFilter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;
            var result = _filterGL[filter][mipFilter + 1];
            if (result === undefined) {
                console.warn('Unknown FILTER: ' + filter);
                return mipFilter === -1 ? gl.LINEAR : gl.LINEAR_MIPMAP_LINEAR;
            }
            return result;
        }
        function glTextureFmt(fmt) {
            var result = _textureFmtGL[fmt];
            if (result === undefined) {
                console.warn('Unknown TEXTURE_FMT: ' + fmt);
                return _textureFmtGL[enums.TEXTURE_FMT_RGBA8];
            }
            return result;
        }
    }
    if (nodeEnv) {
        __define(__module.exports, __require, __module);
    } else {
        __quick_compile__.registerModuleFunc(__filename, function () {
            __define(__module.exports, __require, __module);
        });
    }
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,