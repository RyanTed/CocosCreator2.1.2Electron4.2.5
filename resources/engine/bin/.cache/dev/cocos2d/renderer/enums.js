(function () {
    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
    var __module = nodeEnv ? module : { exports: {} };
    var __filename = 'engine-dev/cocos2d/renderer/enums.js';
    var __require = nodeEnv ? function (request) {
        return require(request);
    } : function (request) {
        return __quick_compile__.require(request, __filename);
    };
    function __define(exports, require, module) {
        if (!nodeEnv) {
            __quick_compile__.registerModule(__filename, module);
        }
                'use strict';
        Object.defineProperty(exports, '__esModule', { value: true });
        exports.default = {
            PROJ_PERSPECTIVE: 0,
            PROJ_ORTHO: 1,
            LIGHT_DIRECTIONAL: 0,
            LIGHT_POINT: 1,
            LIGHT_SPOT: 2,
            SHADOW_NONE: 0,
            SHADOW_HARD: 1,
            SHADOW_SOFT: 2,
            PARAM_INT: 0,
            PARAM_INT2: 1,
            PARAM_INT3: 2,
            PARAM_INT4: 3,
            PARAM_FLOAT: 4,
            PARAM_FLOAT2: 5,
            PARAM_FLOAT3: 6,
            PARAM_FLOAT4: 7,
            PARAM_COLOR3: 8,
            PARAM_COLOR4: 9,
            PARAM_MAT2: 10,
            PARAM_MAT3: 11,
            PARAM_MAT4: 12,
            PARAM_TEXTURE_2D: 13,
            PARAM_TEXTURE_CUBE: 14,
            CLEAR_COLOR: 1,
            CLEAR_DEPTH: 2,
            CLEAR_STENCIL: 4,
            CLEAR_SKYBOX: 8,
            BUFFER_VIEW_INT8: 0,
            BUFFER_VIEW_UINT8: 1,
            BUFFER_VIEW_INT16: 2,
            BUFFER_VIEW_UINT16: 3,
            BUFFER_VIEW_INT32: 4,
            BUFFER_VIEW_UINT32: 5,
            BUFFER_VIEW_FLOAT32: 6
        };
        module.exports = exports['default'];
    }
    if (nodeEnv) {
        __define(__module.exports, __require, __module);
    } else {
        __quick_compile__.registerModuleFunc(__filename, function () {
            __define(__module.exports, __require, __module);
        });
    }
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,