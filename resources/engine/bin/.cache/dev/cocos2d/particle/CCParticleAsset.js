(function () {
    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
    var __module = nodeEnv ? module : { exports: {} };
    var __filename = 'engine-dev/cocos2d/particle/CCParticleAsset.js';
    var __require = nodeEnv ? function (request) {
        return require(request);
    } : function (request) {
        return __quick_compile__.require(request, __filename);
    };
    function __define(exports, require, module) {
        if (!nodeEnv) {
            __quick_compile__.registerModule(__filename, module);
        }
                'use strict';
        var Asset = require('../core/assets/CCAsset');
        var CCSpriteFrame = require('../core/assets/CCSpriteFrame');
        var ParticleAsset = cc.Class({
            name: 'cc.ParticleAsset',
            extends: Asset,
            properties: {
                spriteFrame: {
                    default: null,
                    type: CCSpriteFrame
                }
            }
        });
        cc.ParticleAsset = module.exports = ParticleAsset;
    }
    if (nodeEnv) {
        __define(__module.exports, __require, __module);
    } else {
        __quick_compile__.registerModuleFunc(__filename, function () {
            __define(__module.exports, __require, __module);
        });
    }
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,