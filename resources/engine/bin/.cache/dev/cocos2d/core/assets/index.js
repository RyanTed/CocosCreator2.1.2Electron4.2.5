(function () {
    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
    var __module = nodeEnv ? module : { exports: {} };
    var __filename = 'engine-dev/cocos2d/core/assets/index.js';
    var __require = nodeEnv ? function (request) {
        return require(request);
    } : function (request) {
        return __quick_compile__.require(request, __filename);
    };
    function __define(exports, require, module) {
        if (!nodeEnv) {
            __quick_compile__.registerModule(__filename, module);
        }
                'use strict';
        require('./CCRawAsset');
        require('./CCAsset');
        require('./CCFont');
        require('./CCPrefab');
        require('./CCAudioClip');
        require('./CCScripts');
        require('./CCSceneAsset');
        require('./CCSpriteFrame');
        require('./CCTexture2D');
        require('./CCRenderTexture');
        require('./CCTTFFont');
        require('./CCSpriteAtlas');
        require('./CCBitmapFont');
        require('./CCLabelAtlas');
        require('./CCTextAsset');
        require('./CCJsonAsset');
        require('./CCBufferAsset');
        require('./CCEffectAsset');
        require('./material/CCMaterial');
    }
    if (nodeEnv) {
        __define(__module.exports, __require, __module);
    } else {
        __quick_compile__.registerModuleFunc(__filename, function () {
            __define(__module.exports, __require, __module);
        });
    }
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,