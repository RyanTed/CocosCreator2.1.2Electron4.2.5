(function () {
    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
    var __module = nodeEnv ? module : { exports: {} };
    var __filename = 'engine-dev/polyfill/object.js';
    var __require = nodeEnv ? function (request) {
        return require(request);
    } : function (request) {
        return __quick_compile__.require(request, __filename);
    };
    function __define(exports, require, module) {
        if (!nodeEnv) {
            __quick_compile__.registerModule(__filename, module);
        }
                'use strict';
        if (!Object.assign) {
            Object.assign = function (target, source) {
                return cc.js.mixin(target, source);
            };
        }
        if (!Object.getOwnPropertyDescriptors) {
            Object.getOwnPropertyDescriptors = function (obj) {
                var descriptors = {};
                var ownKeys = Object.getOwnPropertyNames(obj);
                if (Object.getOwnPropertySymbols) {
                    ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(obj));
                }
                for (var i = 0; i < ownKeys.length; ++i) {
                    var key = ownKeys[i];
                    descriptors[key] = Object.getOwnPropertyDescriptor(obj, key);
                }
                return descriptors;
            };
        }
    }
    if (nodeEnv) {
        __define(__module.exports, __require, __module);
    } else {
        __quick_compile__.registerModuleFunc(__filename, function () {
            __define(__module.exports, __require, __module);
        });
    }
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9iamVjdC5qcyIsIkM6L1VzZXJzL25hbnRhcy9maXJlYmFsbC14L2ZiXzIxLXJlbGVhc2UvZW5naW5lL3BvbHlmaWxsL29iamVjdC5qcyJdLCJuYW1lcyI6WyJtaXhpbiIsInNvdXJjZSIsIk9iamVjdCIsImFzc2lnbiIsInRhcmdldCIsImNjIiwianMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwib2JqIiwiZGVzY3JpcHRvcnMiLCJvd25LZXlzIiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImNvbmNhdCIsImkiLCJsZW5ndGgiLCJrZXkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiXSwibWFwcGluZ3MiOiI7SUFDQSxJQUFBLE9BQUEsR0FBQSxPQUFBLE9BQUEsS0FBQSxXQUFBLElBQUEsT0FBQSxPQUFBLEtBQUEsV0FBQTtJQUNvQixJQUFBLFFBQUEsR0FBQSxPQUFBLEdBQUEsTUFBQSxHQUFBLEVBQUEsT0FBQSxFQUFBLEVBQUEsRUFBQTtJQUNBLElBQUEsVUFBQSxHQUFBLCtCQUFBO0lBQ0wsSUFBTUEsU0FBQUEsR0FBY0MsT0FBQUEsR0FBM0IsVUFBQSxPQUFBLEVBQUE7QUFBQSxRQURKLE9BQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUNJO0FBQUEsS0FBMkJBLEdBRWxDLFVBQUEsT0FBQSxFQUFBO0FBQUEsOERBQUE7QUFBQSxLQUZjO0lBS2YsU0FBQSxRQUFBLENBQUEsT0FBQSxFQUFBLE9BQUEsRUFBQSxNQUFBLEVBQUE7QUFBQSxRQUNBLElBQUEsQ0FBQSxPQUFBLEVBQUE7QUFBQSxZQUFBLGlCQUFBLENBQUEsY0FBQSxDQUFBLFVBQUEsRUFBQSxNQUFBLEVBQUE7QUFBQSxTQURBO0FBQUE7UUFQQSxJQUFJLENBQUNDLE1BQUFBLENBQU9DLE1BQVosRUFBb0I7QUFBQSxZQUNoQkQsTUFBQUEsQ0FBT0MsTUFBUEQsR0FBZ0IsVUFBVUUsTUFBVixFQUFrQkgsTUFBbEIsRUFBMEI7QUFBQSxnQkFDdEMsT0FBT0ksRUFBQUEsQ0FBR0MsRUFBSEQsQ0FBTUwsS0FBTkssQ0FBWUQsTUFBWkMsRUFBb0JKLE1BQXBCSSxDQUFQLENBRHNDO0FBQUEsYUFBMUNILENBRGdCO0FBQUE7UUFVcEIsSUFBSSxDQUFDQSxNQUFBQSxDQUFPSyx5QkFBWixFQUF1QztBQUFBLFlBQ25DTCxNQUFBQSxDQUFPSyx5QkFBUEwsR0FBbUMsVUFBVU0sR0FBVixFQUFlO0FBQUEsZ0JBQzlDLElBQUlDLFdBQUFBLEdBQWMsRUFBbEIsQ0FEOEM7QUFBQSxnQkFFOUMsSUFBSUMsT0FBQUEsR0FBVVIsTUFBQUEsQ0FBT1MsbUJBQVBULENBQTJCTSxHQUEzQk4sQ0FBZCxDQUY4QztBQUFBLGdCQUc5QyxJQUFJQSxNQUFBQSxDQUFPVSxxQkFBWCxFQUFrQztBQUFBLG9CQUM5QkYsT0FBQUEsR0FBVUEsT0FBQUEsQ0FBUUcsTUFBUkgsQ0FBZVIsTUFBQUEsQ0FBT1UscUJBQVBWLENBQTZCTSxHQUE3Qk4sQ0FBZlEsQ0FBVkEsQ0FEOEI7QUFBQSxpQkFIWTtBQUFBLGdCQU05QyxLQUFJLElBQUlJLENBQUFBLEdBQUksQ0FBUixDQUFKLENBQWVBLENBQUFBLEdBQUlKLE9BQUFBLENBQVFLLE1BQTNCLEVBQW1DLEVBQUVELENBQXJDLEVBQXVDO0FBQUEsb0JBQ25DLElBQUlFLEdBQUFBLEdBQU1OLE9BQUFBLENBQVFJLENBQVJKLENBQVYsQ0FEbUM7QUFBQSxvQkFFbkNELFdBQUFBLENBQVlPLEdBQVpQLElBQW1CUCxNQUFBQSxDQUFPZSx3QkFBUGYsQ0FBZ0NNLEdBQWhDTixFQUFxQ2MsR0FBckNkLENBQW5CTyxDQUZtQztBQUFBLGlCQU5PO0FBQUEsZ0JBVTlDLE9BQU9BLFdBQVAsQ0FWOEM7QUFBQSxhQUFsRFAsQ0FEbUM7QUFBQSxTQUh2QztBQUFBO0lBR1lLLElBQUFBLE9BQUFBLEVBQUFBO0FBQUFBLFFBQ0RBLFFBQUFBLENBQUFBLFFBQUFBLENBQTRCLE9BQTVCQSxFQUFzQ0MsU0FBdENELEVBQTJDLFFBQTNDQSxFQURDQTtBQUFBQSxLQUFBQSxNQUdVTDtBQUFBQSxRQUNIVSxpQkFBQUEsQ0FBdUIsa0JBQXZCQSxDQUF1QixVQUF2QkEsRUFBdUIsWUFBQTtBQUFBLFlBQUUsUUFBQSxDQUFBLFFBQUEsQ0FBQSxPQUFBLEVBQUEsU0FBQSxFQUFBLFFBQUEsRUFBRjtBQUFBLFNBQXZCQSxFQURHVjtBQUFBQSIsImZpbGUiOiJvYmplY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLy8gZm9yIElFMTFcclxuaWYgKCFPYmplY3QuYXNzaWduKSB7XHJcbiAgICBPYmplY3QuYXNzaWduID0gZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XHJcbiAgICAgICAgcmV0dXJuIGNjLmpzLm1peGluKHRhcmdldCwgc291cmNlKTtcclxuICAgIH1cclxufVxyXG5cclxuLy8gZm9yIEJhaWR1IGJyb3dzZXJcclxuLy8gSW1wbGVtZW50YXRpb24gcmVmZXJlbmNlIHRvOiBcclxuLy8gaHR0cDovLzJhbGl0eS5jb20vMjAxNi8wMi9vYmplY3QtZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9ycy5odG1sXHJcbi8vIGh0dHA6Ly9kb2NzLnczY3ViLmNvbS9qYXZhc2NyaXB0L2dsb2JhbF9vYmplY3RzL3JlZmxlY3Qvb3dua2V5cy9cclxuaWYgKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykge1xyXG4gICAgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPSBmdW5jdGlvbiAob2JqKSB7XHJcbiAgICAgICAgbGV0IGRlc2NyaXB0b3JzID0ge307XHJcbiAgICAgICAgbGV0IG93bktleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvYmopO1xyXG4gICAgICAgIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IC8vIGZvciBJRSAxMVxyXG4gICAgICAgICAgICBvd25LZXlzID0gb3duS2V5cy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmopKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IG93bktleXMubGVuZ3RoOyArK2kpe1xyXG4gICAgICAgICAgICBsZXQga2V5ID0gb3duS2V5c1tpXTtcclxuICAgICAgICAgICAgZGVzY3JpcHRvcnNba2V5XSA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZGVzY3JpcHRvcnM7XHJcbiAgICB9XHJcbn0iLCJcInVzZSBzdHJpY3RcIjtcblxuLy8gZm9yIElFMTFcbmlmICghT2JqZWN0LmFzc2lnbikge1xuICAgIE9iamVjdC5hc3NpZ24gPSBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcbiAgICAgICAgcmV0dXJuIGNjLmpzLm1peGluKHRhcmdldCwgc291cmNlKTtcbiAgICB9O1xufVxuXG4vLyBmb3IgQmFpZHUgYnJvd3NlclxuLy8gSW1wbGVtZW50YXRpb24gcmVmZXJlbmNlIHRvOiBcbi8vIGh0dHA6Ly8yYWxpdHkuY29tLzIwMTYvMDIvb2JqZWN0LWdldG93bnByb3BlcnR5ZGVzY3JpcHRvcnMuaHRtbFxuLy8gaHR0cDovL2RvY3MudzNjdWIuY29tL2phdmFzY3JpcHQvZ2xvYmFsX29iamVjdHMvcmVmbGVjdC9vd25rZXlzL1xuaWYgKCFPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykge1xuICAgIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID0gZnVuY3Rpb24gKG9iaikge1xuICAgICAgICB2YXIgZGVzY3JpcHRvcnMgPSB7fTtcbiAgICAgICAgdmFyIG93bktleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhvYmopO1xuICAgICAgICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAgICAgICAgLy8gZm9yIElFIDExXG4gICAgICAgICAgICBvd25LZXlzID0gb3duS2V5cy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmopKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG93bktleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBvd25LZXlzW2ldO1xuICAgICAgICAgICAgZGVzY3JpcHRvcnNba2V5XSA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZXNjcmlwdG9ycztcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW05aWFtVmpkQzVxY3lKZExDSnVZVzFsY3lJNld5SlBZbXBsWTNRaUxDSmhjM05wWjI0aUxDSjBZWEpuWlhRaUxDSnpiM1Z5WTJVaUxDSmpZeUlzSW1weklpd2liV2w0YVc0aUxDSm5aWFJQZDI1UWNtOXdaWEowZVVSbGMyTnlhWEIwYjNKeklpd2liMkpxSWl3aVpHVnpZM0pwY0hSdmNuTWlMQ0p2ZDI1TFpYbHpJaXdpWjJWMFQzZHVVSEp2Y0dWeWRIbE9ZVzFsY3lJc0ltZGxkRTkzYmxCeWIzQmxjblI1VTNsdFltOXNjeUlzSW1OdmJtTmhkQ0lzSW1raUxDSnNaVzVuZEdnaUxDSnJaWGtpTENKblpYUlBkMjVRY205d1pYSjBlVVJsYzJOeWFYQjBiM0lpWFN3aWJXRndjR2x1WjNNaU9pSTdPMEZCUTBFN1FVRkRRU3hKUVVGSkxFTkJRVU5CTEU5QlFVOURMRTFCUVZvc1JVRkJiMEk3UVVGRGFFSkVMRmRCUVU5RExFMUJRVkFzUjBGQlowSXNWVUZCVlVNc1RVRkJWaXhGUVVGclFrTXNUVUZCYkVJc1JVRkJNRUk3UVVGRGRFTXNaVUZCVDBNc1IwRkJSME1zUlVGQlNDeERRVUZOUXl4TFFVRk9MRU5CUVZsS0xFMUJRVm9zUlVGQmIwSkRMRTFCUVhCQ0xFTkJRVkE3UVVGRFNDeExRVVpFTzBGQlIwZzdPMEZCUlVRN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFTeEpRVUZKTEVOQlFVTklMRTlCUVU5UExIbENRVUZhTEVWQlFYVkRPMEZCUTI1RFVDeFhRVUZQVHl4NVFrRkJVQ3hIUVVGdFF5eFZRVUZWUXl4SFFVRldMRVZCUVdVN1FVRkRPVU1zV1VGQlNVTXNZMEZCWXl4RlFVRnNRanRCUVVOQkxGbEJRVWxETEZWQlFWVldMRTlCUVU5WExHMUNRVUZRTEVOQlFUSkNTQ3hIUVVFelFpeERRVUZrTzBGQlEwRXNXVUZCU1ZJc1QwRkJUMWtzY1VKQlFWZ3NSVUZCYTBNN1FVRkJSVHRCUVVOb1EwWXNjMEpCUVZWQkxGRkJRVkZITEUxQlFWSXNRMEZCWldJc1QwRkJUMWtzY1VKQlFWQXNRMEZCTmtKS0xFZEJRVGRDTEVOQlFXWXNRMEZCVmp0QlFVTklPMEZCUTBRc1lVRkJTU3hKUVVGSlRTeEpRVUZKTEVOQlFWb3NSVUZCWlVFc1NVRkJTVW9zVVVGQlVVc3NUVUZCTTBJc1JVRkJiVU1zUlVGQlJVUXNRMEZCY2tNc1JVRkJkVU03UVVGRGJrTXNaMEpCUVVsRkxFMUJRVTFPTEZGQlFWRkpMRU5CUVZJc1EwRkJWanRCUVVOQlRDeDNRa0ZCV1U4c1IwRkJXaXhKUVVGdFFtaENMRTlCUVU5cFFpeDNRa0ZCVUN4RFFVRm5RMVFzUjBGQmFFTXNSVUZCY1VOUkxFZEJRWEpETEVOQlFXNUNPMEZCUTBnN1FVRkRSQ3hsUVVGUFVDeFhRVUZRTzBGQlEwZ3NTMEZZUkR0QlFWbElJaXdpWm1sc1pTSTZJbTlpYW1WamRDNXFjeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWx4eVhHNHZMeUJtYjNJZ1NVVXhNVnh5WEc1cFppQW9JVTlpYW1WamRDNWhjM05wWjI0cElIdGNjbHh1SUNBZ0lFOWlhbVZqZEM1aGMzTnBaMjRnUFNCbWRXNWpkR2x2YmlBb2RHRnlaMlYwTENCemIzVnlZMlVwSUh0Y2NseHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1kyTXVhbk11YldsNGFXNG9kR0Z5WjJWMExDQnpiM1Z5WTJVcE8xeHlYRzRnSUNBZ2ZWeHlYRzU5WEhKY2JseHlYRzR2THlCbWIzSWdRbUZwWkhVZ1luSnZkM05sY2x4eVhHNHZMeUJKYlhCc1pXMWxiblJoZEdsdmJpQnlaV1psY21WdVkyVWdkRzg2SUZ4eVhHNHZMeUJvZEhSd09pOHZNbUZzYVhSNUxtTnZiUzh5TURFMkx6QXlMMjlpYW1WamRDMW5aWFJ2ZDI1d2NtOXdaWEowZVdSbGMyTnlhWEIwYjNKekxtaDBiV3hjY2x4dUx5OGdhSFIwY0RvdkwyUnZZM011ZHpOamRXSXVZMjl0TDJwaGRtRnpZM0pwY0hRdloyeHZZbUZzWDI5aWFtVmpkSE12Y21WbWJHVmpkQzl2ZDI1clpYbHpMMXh5WEc1cFppQW9JVTlpYW1WamRDNW5aWFJQZDI1UWNtOXdaWEowZVVSbGMyTnlhWEIwYjNKektTQjdYSEpjYmlBZ0lDQlBZbXBsWTNRdVoyVjBUM2R1VUhKdmNHVnlkSGxFWlhOamNtbHdkRzl5Y3lBOUlHWjFibU4wYVc5dUlDaHZZbW9wSUh0Y2NseHVJQ0FnSUNBZ0lDQnNaWFFnWkdWelkzSnBjSFJ2Y25NZ1BTQjdmVHRjY2x4dUlDQWdJQ0FnSUNCc1pYUWdiM2R1UzJWNWN5QTlJRTlpYW1WamRDNW5aWFJQZDI1UWNtOXdaWEowZVU1aGJXVnpLRzlpYWlrN1hISmNiaUFnSUNBZ0lDQWdhV1lnS0U5aWFtVmpkQzVuWlhSUGQyNVFjbTl3WlhKMGVWTjViV0p2YkhNcElIc2dMeThnWm05eUlFbEZJREV4WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzkzYmt0bGVYTWdQU0J2ZDI1TFpYbHpMbU52Ym1OaGRDaFBZbXBsWTNRdVoyVjBUM2R1VUhKdmNHVnlkSGxUZVcxaWIyeHpLRzlpYWlrcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCbWIzSW9iR1YwSUdrZ1BTQXdPeUJwSUR3Z2IzZHVTMlY1Y3k1c1pXNW5kR2c3SUNzcmFTbDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JyWlhrZ1BTQnZkMjVMWlhselcybGRPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmtaWE5qY21sd2RHOXljMXRyWlhsZElEMGdUMkpxWldOMExtZGxkRTkzYmxCeWIzQmxjblI1UkdWelkzSnBjSFJ2Y2lodlltb3NJR3RsZVNrN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJrWlhOamNtbHdkRzl5Y3p0Y2NseHVJQ0FnSUgxY2NseHVmU0pkZlE9PSJdfQ==