"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _http = _interopRequireDefault(require("http"));

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

/**
 * Copyright (C) 2017, hapjs.org. All rights reserved.
 */
var pathClientLog = _path["default"].join(__dirname, '../../client.json');

var clientExists = false;
/**
 * 获取手机设备信息（1020新增接口）
 * @param client {{ ip, port }}
 * @param callback
 */

function getDeviceInfo(client, callback) {
  var req = _http["default"].request({
    path: '/deviceinfo',
    host: client.ip,
    port: client.port,
    timeout: 3000
  }, function (res) {
    res.on('data', function (data) {
      callback(null, JSON.parse(data));
    });
  }).on('error', function (err) {
    callback(err);
  }).on('timeout', function () {
    // abort方法会触发error事件
    req.abort();
  });

  req.end();
}
/**
 * 向手机设备发送更新rpk包请求
 * @param client {{ ip, port }}
 */


function sendUpdateReq(client) {
  var requrl = "http://".concat(client.ip, ":").concat(client.port, "/update"); // 发送请求

  var options = {
    host: client.ip,
    port: client.port,
    path: '/update',
    timeout: 3000,
    method: 'get'
  };

  var req = _http["default"].request(options, function (res) {
    console.log("### App Server ### \u901A\u77E5\u624B\u673A\u66F4\u65B0rpk\u6587\u4EF6\u6210\u529F: ".concat(requrl, " "));
    res.setEncoding('utf8');
  }).on('error', function (err) {
    console.log("### App Server ### \u901A\u77E5\u624B\u673A\u66F4\u65B0rpk\u6587\u4EF6\u5931\u8D25(\u53EF\u5FFD\u7565): ".concat(requrl, " \u9519\u8BEF\u4FE1\u606F: ").concat(err.message));
  }).on('timeout', function () {
    console.log("### App Server ### \u901A\u77E5\u624B\u673A\u66F4\u65B0rpk\u6587\u4EF6\u8D85\u65F6(\u53EF\u5FFD\u7565): ".concat(requrl));
    req.abort();
  });

  req.end();
}

if (_fs["default"].existsSync(pathClientLog)) {
  var _JSON$parse = JSON.parse(_fs["default"].readFileSync(pathClientLog).toString()),
      clients = _JSON$parse.clients;

  if (clients instanceof Array && clients.length > 0) {
    clients.forEach(function (client) {
      if (client.ip !== '127.0.0.1') {
        // 正常WIFI更新
        sendUpdateReq(client);
      } else {
        // ADB更新
        getDeviceInfo(client, function (err) {
          if (err) {
            // 1020以下的版本调试器无该接口，即：不支持ADB
            return;
          }

          sendUpdateReq(client);
        });
      }
    });
    clientExists = true;
  }
}

if (!clientExists) {
  console.log('### App Server ### 没有记录手机地址，不会通知手机更新rpk文件');
}